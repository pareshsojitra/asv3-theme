<?php declare( strict_types=1 );

/**
 * Modern\WP::development() Homepage Theme.
 *
 * @package   MWPD\MwpdTheme
 * @author    Alain Schlesser <alain.schlesser@gmail.com>
 * @license   MIT
 * @link      https://www.modernwp.dev/
 * @copyright 2019 Alain Schlesser
 */

namespace MWPD\MwpdTheme\Navigation;

use stdClass;
use Walker_Nav_Menu;
use WP_Post;

final class MobileNavigationMenuWalker extends Walker_Nav_Menu {

	private $element_index;

	/**
	 * Starts the list before the elements are added.
	 *
	 * @param string   $output Used to append additional content (passed by
	 *                         reference).
	 * @param int      $depth  Depth of menu item. Used for padding.
	 * @param stdClass $args   An object of wp_nav_menu() arguments.
	 * @see   Walker::start_lvl()
	 *
	 * @since 3.0.0
	 *
	 */
	public function start_lvl( &$output, $depth = 0, $args = null ) {
		$this->element_index = 0;
		parent::start_lvl( $output, $depth, $args ); // TODO: Change the autogenerated stub
	}

	/**
	 * Ends the list of after the elements are added.
	 *
	 * @param string   $output Used to append additional content (passed by
	 *                         reference).
	 * @param int      $depth  Depth of menu item. Used for padding.
	 * @param stdClass $args   An object of wp_nav_menu() arguments.
	 * @see   Walker::end_lvl()
	 *
	 * @since 3.0.0
	 *
	 */
	public function end_lvl( &$output, $depth = 0, $args = null ) {
		parent::end_lvl( $output, $depth, $args ); // TODO: Change the autogenerated stub
	}

	/**
	 * Starts the element output.
	 *
	 * @param string   $output Used to append additional content (passed by
	 *                         reference).
	 * @param WP_Post  $item   Menu item data object.
	 * @param int      $depth  Depth of menu item. Used for padding.
	 * @param stdClass $args   An object of wp_nav_menu() arguments.
	 * @param int      $id     Current item ID.
	 * @see   Walker::start_el()
	 *
	 * @since 3.0.0
	 * @since 4.4.0 The {@see 'nav_menu_item_args'} filter was added.
	 *
	 */
	public function start_el( &$output, $item, $depth = 0, $args = null, $id = 0 ) {
		$classes = $item->current
			? 'block px-3 py-2 rounded-md text-base font-medium text-white bg-indigo-800 focus:outline-none focus:text-white focus:bg-gray-700'
			: 'block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-white hover:bg-indigo-600 focus:outline-none focus:text-white focus:bg-indigo-600';

		if ( $this->element_index !== 0 ) {
			$classes = 'mt-1 ' . $classes;
		}
		$url = preg_match( '#^http[s]?://.*$#i', $item->url )
			? $item->url
			: home_url( $item->url );
		$output .= '<a href="' . $url . '" class="' . $classes . '">';
		$output .= $item->title;
		$output .= '</a>';

		$this->element_index++;
	}

	/**
	 * Ends the element output, if needed.
	 *
	 * @param string   $output Used to append additional content (passed by
	 *                         reference).
	 * @param WP_Post  $item   Page data object. Not used.
	 * @param int      $depth  Depth of page. Not Used.
	 * @param stdClass $args   An object of wp_nav_menu() arguments.
	 * @since 3.0.0
	 *
	 * @see   Walker::end_el()
	 *
	 */
	public function end_el( &$output, $item, $depth = 0, $args = null ) {
		parent::end_el( $output, $item, $depth, $args ); // TODO: Change the autogenerated stub
	}

}
